/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => DurumCubuguAlinti
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DEFAULT_SETTINGS = [
  { quote: "Ve \u015F\xF6yle de: Hamd O All\xE2h\u2019a ki, hi\xE7bir \xE7ocuk edinmedi, m\xFClkte orta\u011F\u0131 yoktur, \xE2ciz olmay\u0131p bir yard\u0131mc\u0131ya da ihtiy\xE2c\u0131 yoktur. Tekb\xEEr getirerek O\u2019nu noksanl\u0131klardan y\xFCcelt de y\xFCcelt. Kur\u2019\xE2n-\u0131 Ker\xEEm, \u0130sr\xE2 S\xFBresi, \xC2yet: 17/111" },
  { quote: "Ger\xE7ek h\xFCk\xFCmd\xE2r olan All\xE2h y\xFCcedir. Sana vahyedilmesi tamamlanmadan \xF6nce Kur\u2019\xE2n-\u0131 okumakta acele etme. \u201CRabbim! \u0130lmimi artt\u0131r\u201D de. Kur\u2019\xE2n-\u0131 Ker\xEEm, T\xE2h\xE2 (T\xE2-H\xE2) S\xFBresi, \xC2yet: 20/114" },
  { quote: "Benim Rabb\u2019\u0131m All\xE2h\u2019t\u0131r. O\u2019n\xE2 hi\xE7bir \u015Feyi ortak ko\u015Fmam. Had\xEEs-i \u015Eer\xEEf, Hz. Muhammed (s.a.v.); R\xE2v\xEE: Hz. Esm\xE2 (r.anh\xE2)" },
  { quote: "G\xFCzel, veciz konu\u015Fman\u0131n s\u0131rr\u0131; l\xFCzumsuz, fuz\xFBl\xEE s\xF6zleri terk etmektir. Hz. Eb\xFB Bekir (r.a.)" },
  { quote: "Bir adam\u0131 y\xFCz\xFCne kar\u015F\u0131 \xF6vmek, onu bo\u011Fazlamakt\u0131r. Hz. \xD6mer (r.a.)" },
  { quote: "Ceh\xE2let \xF6yle binektir ki, \xFCzerine binen zel\xEEl olur, arkada\u015Fl\u0131k yapan yolunu kaybeder. Hz. Osman (r.a.)" },
  { quote: "Bin zulme u\u011Frasan da bir zul\xFCm yapma. Hz. Ali (k.v.)" },
  { quote: "Bir m\xFBm di\u011Fer bir m\xFBmu tutu\u015Fturmakla \u0131\u015F\u0131\u011F\u0131ndan bir \u015Fey kaybetmez. Mevl\xE2n\xE2 Cel\xE2ledd\xEEn-i R\xFBm\xEE (rha.)" },
  { quote: "Bir \xE7ivi y\xFCz\xFCnden bir nal, bir nal y\xFCz\xFCnden bir \xE2t, bir \xE2t y\xFCz\xFCnden de bir \xE2tl\u0131 gidiverir. Benjamin Franklin" },
  { quote: "G\xFCl\xFCn dikenine de\u011Fil, kokusuna ve rengine bak\u0131n. Prof. Dr. Mahm\xFBd Es\u2019ad Co\u015Fan (rha.)" },
  { quote: "Siy\xE2setle ilgilenmeyebilirsiniz fakat devleti y\xF6netecek kadar veya y\xF6netenlere \u0131\u015F\u0131k olacak kadar siy\xE2seti de biliniz. Mehmet Ke\xE7eci" },
  { quote: "\u0130yili\u011Fi gizlemek, k\xF6t\xFCl\xFC\u011F\xFC gizlemekten daha \xFCst\xFCnd\xFCr. Eb\xFB Bekir Ferr\xE2 (rha.)" },
  { quote: "Bilmediklerimi aya\u011F\u0131m\u0131n alt\u0131na alsayd\u0131m ba\u015F\u0131m g\xF6\u011Fe ererdi/de\u011Ferdi. \u0130m\xE2m-\u0131 A\u2019zam Eb\xFB Han\xEEfe Nu\u2019m\xE2n b. S\xE2bit bin Z\xFBt\xE2 (Zevta) (bin M\xE2h) bin Merzub\xE2n (rha.)" },
  { quote: "\u0130nsan, al\u0131\u015Fkanl\u0131klar\u0131n\u0131n \xE7ocu\u011Fudur. \u0130bn-i Hald\xFBn (rha.)" },
  { quote: "G\xFCzel s\xF6z s\xF6yleyen, kimseden k\xF6t\xFC s\xF6z i\u015Fitmez. Firdevs\xEE" },
  { quote: "Avc\u0131 nice al (tuzak, h\xEEle) bilirse, ay\u0131 da onca yol bilir. K\xE2\u015Fgarl\u0131Mahm\xFBd" },
  { quote: "Birli\u011Fin kederi, ayr\u0131l\u0131\u011F\u0131n sef\xE2s\u0131ndan daha hay\u0131rl\u0131d\u0131r. Yahya bin Mu\xE2z bin Ca\u2019fer er-R\xE2z\xEE (rha.)" },
  { quote: "B\xFCt\xFCn k\xF6t\xFCl\xFCklerin anahtar\u0131, hiddettir. Ca\u2019fer bin Muhammed (rha.)" },
  { quote: "Kesilmi\u015F koyuna derisinin y\xFCz\xFClmesi elem vermez. Hz. Esm\xE2 (r.anh\xE2)" },
  { quote: "G\xFCzel ahl\xE2k; c\xF6mertlik, ba\u011F\u0131\u015Flay\u0131c\u0131l\u0131k, sab\u0131r ve tahamm\xFCld\xFCr. Hasan-\u0131 Basri (rha.)" },
  { quote: "En iyi nasih\xE2t; iyi \xF6rnek olmakt\u0131r. Malcolm X" },
  { quote: "Hay\xE2t, \xEEm\xE2n ve cih\xE2dd\u0131r. Hz. H\xFCseyin (r.a.)" },
  { quote: "Hayat\u0131nda ekme\u011Fi yenmeyen kimsenin ad\u0131, \xF6l\xFCm\xFCnden sonra an\u0131lmaz. \u015Eeyh Sa\u2019d\xEE-i \u015E\xEEr\xE2z\xEE (rha.)" },
  { quote: "Hi\xE7 kimse, di\u011Fer bir kimsenin kulu de\u011Fildir. Hz. Ali (r.a.)" },
  { quote: "Uzun mes\xE2felere ula\u015Fmak, yak\u0131n mes\xE2feleri a\u015Fmakla m\xFCmk\xFCnd\xFCr. \u0130m\xE2m-\u0131 Gazz\xE2l\xEE (rha.)" },
  { quote: "T\xE2rih de\u011Fil, hat\xE2lar tekerr\xFCr ediyor. II. Abd\xFClham\xEEd H\xE2n (rha.)" },
  { quote: "Her kalbin \xE7arp\u0131nt\u0131s\u0131 kendi ecelinin ayak sesleridir. B\xE2yezid-i Best\xE2m\xEE (rha.)" },
  { quote: "Mal cimrilerde, silah korkaklarda, karar da zay\u0131flarda olursa i\u015Fler bozulur. Hz. Eb\xFB Bekir (r.a.)" },
  { quote: "Kibir, bele ba\u011Flanm\u0131\u015F ta\u015F gibidir.Onunla ne y\xFCz\xFCl\xFCr ne de u\xE7ulur. Hac\u0131 Bayr\xE2m-\u0131 Vel\xEE (rha.)" },
  { quote: "B\u0131\xE7ak kendi sap\u0131n\u0131 kesmez. Kore \xD6zl\xFC S\xF6z\xFC" },
  { quote: "Yar\u0131m h\xE2kim maldan, yar\u0131m hek\xEEm c\xE2ndan, yar\u0131m hoca\u2019da \xEEm\xE2ndan eder. T\xFCrk Atas\xF6z\xFC" }
];
var DurumCubuguAlinti = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    const statusBar = this.addStatusBarItem();
    const initialQuote = this.getRandomQuote();
    const quoteElement = statusBar.createEl("span", { text: `${this.truncateQuote(initialQuote)} \u{1F4DA}` });
    quoteElement.style.cursor = "pointer";
    quoteElement.title = this.getFullQuote(initialQuote);
    quoteElement.addEventListener("click", () => {
      this.updateStatusBar(statusBar);
    });
    const ribbonIconEl = this.addRibbonIcon("star", "Al\u0131nt\u0131y\u0131 yenile", (evt) => {
      console.log("\u015Eerit t\u0131kland\u0131");
      this.updateStatusBar(statusBar);
    });
    this.addCommand({
      id: "alinti",
      name: "Durum \xC7ubu\u011Fu Al\u0131nt\u0131lar\u0131",
      callback: () => {
        this.updateStatusBar(statusBar);
      }
    });
    this.addSettingTab(new MySettingTab_default(this.app, this));
  }
  updateStatusBar(statusBar) {
    statusBar.empty();
    const randomQuote = this.getRandomQuote();
    const quoteElement = statusBar.createEl("span", { text: `${this.truncateQuote(randomQuote)} \u{1F4DA}` });
    quoteElement.style.cursor = "pointer";
    quoteElement.title = this.getFullQuote(randomQuote);
    quoteElement.addEventListener("click", () => {
      this.updateStatusBar(statusBar);
    });
  }
  getRandomQuote() {
    const randomIndex = Math.floor(Math.random() * DEFAULT_SETTINGS.length);
    return DEFAULT_SETTINGS[randomIndex].quote;
  }
  truncateQuote(quote) {
    return quote.length > 60 ? quote.substring(0, 60) + "..." : quote;
  }
  getFullQuote(quote) {
    return quote;
  }
  onunload() {
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
//# sourceMappingURL=data:application/json;base64,
